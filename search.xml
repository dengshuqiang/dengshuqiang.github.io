<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>兼容window.showModalDialog</title>
      <link href="/2019/02/12/hello/"/>
      <url>/2019/02/12/hello/</url>
      
        <content type="html"><![CDATA[<p>今日遇到老项目为ie项目,使用了谷歌放弃了的window.showModalDialog 弹窗传递参数,谷歌一直报错所以想了个法子通过阻塞来实现.</p><p>1.先需要一个判断浏览器的函数</p><p>//判断是否是IE浏览器<br>function myBrowser() {<br>    var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串<br>    var isOpera = userAgent.indexOf(“Opera”) &gt; -1; //判断是否Opera浏览器<br>    var isIE = userAgent.indexOf(“compatible”) &gt; -1<br>            &amp;&amp; userAgent.indexOf(“MSIE”) &gt; -1 &amp;&amp; !isOpera; //判断是否IE浏览器<br>    var isEdge = userAgent.indexOf(“Edge”) &gt; -1; //判断是否IE的Edge浏览器<br>    var isFF = userAgent.indexOf(“Firefox”) &gt; -1; //判断是否Firefox浏览器<br>    var isSafari = userAgent.indexOf(“Safari”) &gt; -1<br>            &amp;&amp; userAgent.indexOf(“Chrome”) == -1; //判断是否Safari浏览器<br>    var isChrome = userAgent.indexOf(“Chrome”) &gt; -1<br>            &amp;&amp; userAgent.indexOf(“Safari”) &gt; -1; //判断Chrome浏览器</p><pre><code>if (isIE) {    var reIE = new RegExp(&quot;MSIE (\\d+\\.\\d+);&quot;);    reIE.test(userAgent);    var fIEVersion = parseFloat(RegExp[&quot;$1&quot;]);    if (fIEVersion == 7) {        return &quot;IE7&quot;;    } else if (fIEVersion == 8) {        return &quot;IE8&quot;;    } else if (fIEVersion == 9) {        return &quot;IE9&quot;;    } else if (fIEVersion == 10) {        return &quot;IE10&quot;;    } else if (fIEVersion == 11) {        return &quot;IE11&quot;;    } else {        return &quot;0&quot;;    }//IE版本过低    return &quot;IE&quot;;}else if (isOpera) {    return &quot;Opera&quot;;} elseif (isEdge) {    return &quot;Edge&quot;;} elseif (isFF) {    return &quot;FF&quot;;} elseif (isSafari) {    return &quot;Safari&quot;;} elseif (isChrome) {    return &quot;Chrome&quot;;}else{     return &quot;IE&quot;;}</code></pre><p>}</p><p>2.需要用到阻塞函数</p><p>/*</p><ul><li>暂停函数<br>*/<br>function Pause(obj,iMinSecond){<br> if (window.eventList==null) window.eventList=new Array();<br> var ind=-1;<br> for (var i=0;i&lt;window.eventList.length;i++){ <pre><code>if (window.eventList[i]==null) {     window.eventList[i]=obj;     ind=i;     break; } </code></pre> }<br> if (ind==-1){ <pre><code>ind=window.eventList.length; window.eventList[ind]=obj; </code></pre> }<br> setTimeout(“GoOn(“ + ind + “)”,iMinSecond);<br>}</li></ul><p>/<em><br>该函数把要暂停的函数放到数组window.eventList里，同时通过setTimeout来调用继续函数。<br>继续函数如下： </em>/<br>function GoOn(ind){<br>    var obj=window.eventList[ind];<br>    window.eventList[ind]=null;<br>    if (obj.NextStep) obj.NextStep();<br>    else obj();<br>} </p><p>3.通过判断myBrowser().indexOf(“IE”)&gt;-1 来判断浏览器是否IE,如果不是则进行阻塞,直到 window.returnValue 返回值</p><p>  此处的openDIVModule() 为通过layer封装open方法,可自行搜索.<br>  var url = “”;<br>  window.userSelectWin = openDIVModule(url, 800, 565, true, “选择”);<br>  str = window.returnValue;<br>  var timer = setInterval(function(){<br>    str = window.returnValue;<br>    if(!str){<br>      Pause(this,500);//调用暂停函数<br>    }else{<br>      window.returnValue=null;//清空返回值<br>      clearInterval(timer);<br>    }<br>    }, 500);<br>  this.NextStep=function(){<br>        //得到返回值之后的操作<br>   }</p>]]></content>
      
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/02/12/hello-world/"/>
      <url>/2019/02/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
